# Configuration for deploying the book-catalog application
apiVersion: apps/v1 # Specifies the API version for the deployment resource
kind: Deployment # Defines the resource as a Kubernetes Deployment
metadata:
  name: book-catalog # The identifier for this deployment

spec:
  replicas: 1 # Defines the number of pod replicas (1 instance of the application)
  selector:
    matchLabels:
      app: book-catalog # Filters pods by this label to manage them under this deployment
  template:
    metadata:
      labels:
        app: book-catalog # Label assigned to the pod, used to match the service selector

    spec:
      containers:
        - name: book-catalog # The name of the container within the pod
          image: week62p:1 # Specifies the Docker image to use for this container (local image)
          ports:
            - containerPort: 8000 # The container will be accessible on port 8000
          imagePullPolicy: Never # Ensures Kubernetes does not attempt to pull the image from a remote repository

          # Environment variables to configure the container
          env:
            - name: DATABASE_URL # Environment variable name
              value: "postgresql://krishmoradiyasit722part2_user:mgIOUu56CxGVYwL92TFEFzWd7FninQ4y@dpg-crejjfggph6c73esnrr0-a.oregon-postgres.render.com/krishmoradiyasit722part2"
              # PostgreSQL connection string for database access

---
# Configuration for exposing the book-catalog application as a service
apiVersion: v1 # The API version for the service resource
kind: Service # Declares this resource as a Kubernetes Service
metadata:
  name: book-catalog # The name of the service

spec:
  selector:
    app: book-catalog # Routes traffic to pods with the matching label

  type: NodePort # Exposes the service via a NodePort to make it accessible outside the cluster

  ports:
    - protocol: TCP # Specifies the protocol for communication (TCP)
      port: 8000 # The port on which the service listens
      targetPort: 8000 # Redirects traffic to port 8000 inside the container
